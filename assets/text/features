= Features =

==High Quality PHP Syntax Highlighting==
<div class='pretty-list'>
  * *Easy to use* - Highlighting requires only one line of code.
  * *CSS themes* - There are several light and dark themes included and you can easily create more.
  * Includes transparent *caching* so your site should stay *fast*
  * *Powerful*: It uses lexical scanners to highlight your source code, which means syntax highlighting is high quality and accurate. It's powerful enough to do clever things like:
    # Handle mixed [demo/show/16 PHP/HTML/CSS/JavaScript] and [demo/show/17 Ruby on Rails-like] language nesting,
    # [demo/show/4 highlight source code inside diff/patch files],
    # highlight [demo/show/10 Ruby's string interpolation and balanced delimiters].
  * *Well documented* and *open source* - Stuck, or want to extend Luminous? Check out the [/docs documentation section].
  * *Safe* - Luminous has a large test database and is frequently tested against random input, so you know it'll handle your code gracefully.
</div>

== Why not just use GeSHi? ==

GeSHi is another PHP syntax highlighter and has existed for much longer. Unfortunately GeSHi has a number of [http://stackoverflow.com/questions/230270/php-syntax-highlighting obvious and not so obvious problems]. GeSHi is not particularly powerful and will easily fail on complex languages because it tries to handle every language with the same lexer. This is architecturally distinct from Luminous, which allows lexers to be arbitrarily extended to fit the language. Luminous employs a lot less magic internally because it does not try to create a one-size-fits-all solution, which means that if you ever have to extend it, hopefully it is a lot more straight-forward.

Furthermore, GeSHi makes things like CSS styles difficult (it defines colours _inside the language files_), and it makes no real effort to work around PCRE limitations, which means you can't *trust* it to work. GeSHi's infrastructure is sufficiently lacking that it has to rely on complex regular expressions which can easily crash PCRE, whereas Luminous is explicitly tested against nonsense code to check that it works correctly.

GeSHi is generally faster than Luminous in terms of raw throughput. However, Luminous includes a caching system which means in reality, your average 'real' call to Luminous is much faster.